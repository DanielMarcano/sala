{"version":3,"sources":["node_modules/browser-pack/_prelude.js","public/js/admin.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","form","document","getElementById","fields","querySelectorAll","addEventListener","invalidFields","allFilled","forEach","element","classList","add","value","focus","consentButton","preventDefault","target"],"mappings":"CAAA,WAAA,OAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,GAAA,EAAA,CAAA,CAAAa,EAAA,CAAA,SAAAT,EAAAU,EAAAJ,gBCAA,IAAMK,EAAOC,SAASC,eAAe,QAC/BC,EAASH,EAAKI,iBAAiB,0CACnBH,SAASG,iBAAiB,uDA+D5CJ,EAAKK,iBAAiB,SAAU,SAAUvB,GArDrB,IACbwB,EACFC,EADED,EAAgBN,EAAKI,iBAAiB,YACxCG,GAAY,EAEa,IAAzBD,EAAcT,SAChBU,GAAY,EACZD,EAAcE,QAAQ,SAACC,GACrBA,EAAQC,UAAUC,IAAI,oBAEO,OAA3BL,EAAc,GAAGM,MACnBN,EAAc,GAAGO,QAEjBC,cAAcD,SAIXN,GAuCLzB,EAAEiC,mBA9DJZ,EAAOK,QAAQ,SAACC,GACdA,EAAQJ,iBAAiB,OAAQ,SAACvB,GAChCA,EAAEkC,OAAON,UAAUC,IAAI","file":"admin.bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","const form = document.getElementById('form');\nconst fields = form.querySelectorAll('input:not([type=\"checkbox\"]), textarea');\nconst focusable = document.querySelectorAll('input:not([type=\"checkbox\"]), textarea, .conditions');\n\nconst addValidationEvents = () => {\n  fields.forEach((element) => {\n    element.addEventListener('blur', (e) => {\n      e.target.classList.add('form__validate');\n    });\n  });\n};\n\nconst validateForm = () => {\n  const invalidFields = form.querySelectorAll(':invalid');\n  let allFilled = true;\n\n  if (invalidFields.length !== 0) {\n    allFilled = false;\n    invalidFields.forEach((element) => {\n      element.classList.add('form__validate');\n    });\n    if (invalidFields[0].value !== 'on') {\n      invalidFields[0].focus();\n    } else {\n      consentButton.focus();\n    }\n  }\n\n  return allFilled;\n};\n\nconst restartFields = () => {\n  document.querySelectorAll('input, textarea').forEach((element) => {\n    const field = element;\n    field.value = '';\n    field.checked = false;\n    field.classList.remove('form__validate');\n  });\n};\n\nconst saveFormIntoJSON = () => {\n  const formObject = {};\n  const updatedFields = form.querySelectorAll('input, textarea');\n  updatedFields.forEach((element) => {\n    formObject[element.getAttribute('name')] = element.value;\n  });\n  \n  return JSON.stringify(formObject);\n};\n\nconst sendForm = () => {\n  const request = new Request('/events', {\n    method: 'POST',\n    cache: 'reload',\n    body: saveFormIntoJSON(),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n  fetch(request)\n    .then(response => response.json())\n    .then(jsonData => alert(jsonData.message));\n};\n\nform.addEventListener('submit', function (e) {\n  if (!validateForm(this)) {\n    e.preventDefault();\n  }\n});\n\naddValidationEvents();"]}